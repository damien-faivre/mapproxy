name: Dependabot Dockerfile Update

permissions:
  packages: write
  security-events: write

on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - 'Dockerfile'
      - 'Dockerfile-alpine'

jobs:
  update-and-publish-ubuntu:
    runs-on: ubuntu-latest

    # Only run if the push was made by dependabot
    if: github.actor == 'dependabot[bot]'

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Get latest release tag
        run: |
          LATEST_TAG=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r '.tag_name')
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV
          echo "Latest release tag: $LATEST_TAG"

      - name: Use the tag in subsequent steps
        run: |
          echo "Using tag: ${{ env.LATEST_TAG }}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push base image
        uses: docker/build-push-action@v6
        with:
          file: ./Dockerfile
          push: true
          target: base
          tags: ${{ env.LATEST_TAG }}
          platforms: linux/amd64,linux/arm64

      - name: Build and push development image
        uses: docker/build-push-action@v6
        with:
          file: ./Dockerfile
          push: true
          target: development
          tags: ${{ env.LATEST_TAG }}-dev
          platforms: linux/amd64,linux/arm64

      - name: Build and push nginx image
        uses: docker/build-push-action@v6
        with:
          file: ./Dockerfile
          push: true
          target: nginx
          tags: ${{ env.LATEST_TAG }}-nginx
          platforms: linux/amd64,linux/arm64

  build-and-publish-alpine:
      # Only run if the push was made by dependabot
    if: github.actor == 'dependabot[bot]'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Get latest release tag
        run: |
          LATEST_TAG=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r '.tag_name')
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV
          echo "Latest release tag: $LATEST_TAG"

      - name: Use the tag in subsequent steps
        run: |
          echo "Using tag: ${{ env.LATEST_TAG }}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push base alpine image
        uses: docker/build-push-action@v6
        with:
          file: ./Dockerfile-alpine
          push: true
          target: base
          tags: ${{ env.LATEST_TAG }}-alpine
          platforms: linux/amd64,linux/arm64

      - name: Build and push alpine development image
        uses: docker/build-push-action@v6
        with:
          file: ./Dockerfile-alpine
          push: true
          target: development
          tags: ${{ env.LATEST_TAG }}-alpine-dev
          platforms: linux/amd64,linux/arm64

      - name: Build and push alpine based nginx image
        uses: docker/build-push-action@v6
        with:
          file: ./Dockerfile-alpine
          push: true
          target: nginx
          tags: ${{ env.LATEST_TAG }}-alpine-nginx
          platforms: linux/amd64,linux/arm64
